name: Mock Classifier CI Pipeline

on:
  push:
    branches:
      - feature/23-mclassifier-sign-docker-image
  pull_request:
    branches: [ main ]

jobs:
  BuildTest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: Dotnet Restore Tools
      run: dotnet tool restore --tool-manifest "src/.config/dotnet-tools.json"
        
    - name: Dotnet Restore
      run: dotnet restore src/*.sln
        
    - name: Dotnet Format
      run: dotnet format src/*.sln --no-restore
      
    - name: Dotnet Build
      run: dotnet build src/*.sln --no-restore
      
    - name: Dotnet Publish
      working-directory: src
      run: dotnet publish *.sln --no-restore
     
    - name: Dotnet Test (unit tests only)
      run: dotnet test src/*.UnitTests/*.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Copy Coverage output to root
      run: cp src/*.UnitTests/TestResults/**/coverage.cobertura.xml coverage.cobertura.xml
      
    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.2.0
      with:
        filename: coverage.cobertura.xml
        fail_below_min: true
        format: markdown
        output: both
        thresholds: '80'
    
    - name: Upload Coverage Markdown Report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: coverage-report-markdown
        path: code-coverage-results.md
        
    - name: Upload Coverage XML Report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: coverage-report-xml
        path: coverage.cobertura.xml
        
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2.2.0
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
  
    - name: Mutation Test
      working-directory: src
      run: dotnet stryker
    
    - name: Upload Mutation Report
      uses: actions/upload-artifact@v3.0.0
      with:
        name: mutation-report
        path: src/StrykerOutput

  PackageDeploy:
    runs-on: ubuntu-latest
    needs: BuildTest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Setup BuildX
      uses: docker/setup-buildx-action@v2

    - name: Set image tag
      run: |
        echo "DOCKER_TAG_SHA=ghcr.io/buerokratt/mock-classifier:${GITHUB_SHA}" >> $GITHUB_ENV
        echo "DOCKER_TAG_LATEST=ghcr.io/buerokratt/mock-classifier:latest" >> $GITHUB_ENV
    
    - name: Docker Build
      run: docker image build src/MockClassifier.Api/ --tag $DOCKER_TAG_SHA

    - name: List Docker images
      run: docker images

    - name: Install cosign
      uses: sigstore/cosign-installer@d6a3abf1bdea83574e28d40543793018b6035605
      with:
        cosign-release: 'v1.7.1'

    - name: Log in to GitHub container registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Push Docker image to ghcr
      run: docker push $DOCKER_TAG_SHA

    - name: Sign Docker image
      run: |
        cosign sign \
          -a "ref=${{ github.sha }}" \
          --upload=false \
          $DOCKER_TAG_SHA
      env:
        COSIGN_EXPERIMENTAL: "true"
